{"version":3,"sources":["Components/SearchBar/SearchBar.jsx","Components/Track/Track.jsx","Components/TrackList/TrackList.jsx","Components/SearchResults/SearchResults.jsx","Components/PlaylistList/PlaylistList.jsx","Components/PlayList/PlayList.jsx","util/Spotify.jsx","Components/App/App.jsx","reportWebVitals.js","index.js"],"names":["SearchBar","props","search","bind","handleTermChange","handleKeypress","state","term","this","onSearch","event","setState","target","value","e","charCode","className","placeholder","onChange","onKeyPress","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","album","artist","renderAction","TrackList","tracks","map","key","id","SearchResults","searchResults","PlaylistList","playlistArray","length","playlist","i","Playlist","handleNameChange","userPlaylist","onNameChange","userData","type","defaultValue","playlistTracks","onSave","accessToken","userId","Spotify","fetchUserStuff","getAccessToken","getCurrentUserId","getUserPlaylists","headers","Authorization","fetch","then","response","json","jsonResponse","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","items","name","console","log","artists","uri","savePlaylist","trackUris","method","body","JSON","stringify","playlistId","uris","App","updatePlaylistName","playlistName","find","savedTrack","push","PlaylistTracks","filter","currentTrack","playListName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7fb30a.chunk.js","sourcesContent":["import React from 'react';\n// import Spotify from '../../util/Spotify';\n// import Spotify from '../../util/Spotify';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.search = this.search.bind(this);\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleKeypress = this.handleKeypress.bind(this)\n\n\t\tthis.state = {\n\t\t\tterm: ''\n\t\t}\n\t}\n\n\tsearch() {\n\t\tif (this.state.term) {\n\n\t\t\tthis.props.onSearch(this.state.term);\n\t\t} return\n\n\t\t\n\t}\n\n\n\thandleTermChange(event) {\n\t\t// Spotify.getCurrentUserId()\n\t\tthis.setState({ term: event.target.value });\n\t\t// console.log(this.state.term)\n\t}\n\n\thandleKeypress(e) {\n\t\tif (e.charCode === 13) {\n\t\t\t// console.log(e)\n\t\t\tthis.search()\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SearchBar\">\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"Enter A Song, Album, or Artist\"\n\t\t\t\t\tonChange={this.handleTermChange}\n\t\t\t\t\tonKeyPress={this.handleKeypress}\n\t\t\t\t/>\n\t\t\t\t<button onClick={this.search} className=\"SearchButton\">\n\t\t\t\t\tSEARCH\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n}\n\n\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addTrack = this.addTrack.bind(this);\n\t\tthis.removeTrack = this.removeTrack.bind(this);\n\t\t\n\t}\n\n\taddTrack() {\n\t\tthis.props.onAdd(this.props.track);\n\t}\n\n\tremoveTrack() {\n\t\tthis.props.onRemove(this.props.track);\n\t}\n\n\trenderAction() {\n\t\tif (this.props.isRemoval) {\n\t\t\treturn (\n\t\t\t\t<button className=\"Track-action\" onClick={this.removeTrack}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button className=\"Track-action\" onClick={this.addTrack}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Track\">\n\t\t\t\t<div className=\"Track-information\">\n\t\t\t\t\t<h3>{this.props.track.className}</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{this.props.track.album} | {this.props.track.artist}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t{this.renderAction()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Track;\n","import React from 'react';\nimport './TrackList.css';\nimport Track from '../Track/Track';\n\n\nclass TrackList extends React.Component {\n\tlogvalues() {\n\t\t// console.log('{this.props.track.album} | {this.props.track.artist}', <Track/>)\n\t}\n\n\trender(track) {\n\t\treturn (\n\t\t\t<div className=\"TrackList\">\n\t\t\t\t\n\t\t\t\t{true ? this.props.tracks.map((track) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Track\n\t\t\t\t\t\t\tonAdd={this.props.onAdd}\n\t\t\t\t\t\t\tonRemove={this.props.onRemove}\n\t\t\t\t\t\t\tisRemoval={this.props.isRemoval}\n\t\t\t\t\t\t\ttrack={track}\n\t\t\t\t\t\t\tkey={track.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}) : 'black'}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TrackList;\n","import React from 'react';\nimport TrackList from '../TrackList/TrackList.jsx';\nimport './SearchResults.css';\n\nclass SearchResults extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SearchResults\">\n\t\t\t\t<h2>Results</h2>\n\t\t\t\t<TrackList\n\t\t\t\t\tonAdd={this.props.onAdd}\n\t\t\t\t\ttracks={this.props.searchResults}\n\t\t\t\t\tisRemoval={false}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SearchResults;\n","import React from 'react'\n\nconst PlaylistList = ({playlistArray}) => {\n    \n    return(\n        <div>\n            {playlistArray && playlistArray.length > 0\n                && playlistArray.map((playlist, i) => <div key={i}>{playlist}</div>)}\n        </div>\n    )\n}\n\nexport default PlaylistList","import React from 'react';\nimport './PlayList.css';\nimport TrackList from '../TrackList/TrackList';\nimport PlaylistList from '../PlaylistList/PlaylistList';\n\nclass Playlist extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\n\t\tthis.playlistArray = props.userPlaylist\n\t}\n\t\n\thandleNameChange(event) {\n\t\tthis.props.onNameChange(event.target.value);\n\t}\n\t\n\trender() {\n\n\t\tconst {playlistArray} = this.props.userData\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Playlist\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tdefaultValue={'New Playlist'}\n\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t/>\n\t\t\t\t<div>saved playlists below here</div>\n\t\t\t\t<PlaylistList playlistArray={playlistArray}/>\n\t\t\t\t<TrackList\n\t\t\t\t\tonRemove={this.props.onRemove}\n\t\t\t\t\tisRemoval={true}\n\t\t\t\t\ttracks={this.props.playlistTracks}\n\t\t\t\t/>\n\t\t\t\t<button className=\"Playlist-save\" onClick={this.props.onSave}>\n\t\t\t\t\tSAVE TO SPOTIFY\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playlist;\n","let accessToken = '';\nlet userId = 'fred'\nlet playlistArray = []\nconst clientId = '20ba39e238024535ab5f10f8ef494d38';\nconst redirectUri = 'https://eddiejorden.github.io/my-jams/';\n\nconst Spotify = {\n\tasync fetchUserStuff() {\n\t\t\tawait this.getAccessToken()\n\t\t\tawait this.getCurrentUserId()\n\t\t\tawait this.getUserPlaylists()\n\t\t\treturn {\n\t\t\t\taccessToken: accessToken,\n\t\t\t\tuserId: userId,\n\t\t\t\tplaylistArray: playlistArray\n\t\t\t}\n\t},\n\t\n\tgetCurrentUserId() {\t\n\t\tconst headers = { Authorization: `Bearer ${accessToken}`}\n\t\treturn fetch(`https://api.spotify.com/v1/me`, {\n\t\t\theaders: headers,\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((jsonResponse) => {\n\t\t\t\tuserId = jsonResponse.id\n\t\t\t\treturn userId\n\t\t})\n\t},\t\t\t\n\t\n\tgetAccessToken() {\n\t\tif (accessToken) {\n\t\t\treturn accessToken;\n\t\t}\n\t\t// check for access token match\n\t\tconst accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n\t\tconst expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n\t\tif (accessTokenMatch && expiresInMatch) {\n\t\t\taccessToken = accessTokenMatch[1];\n\t\t\tconst expiresIn = Number(expiresInMatch[1]);\n\t\t\t// clears parameters allowing to grab new access token when it expires\n\t\t\twindow.setTimeout(() => (accessToken = ''), expiresIn * 1000);\n\t\t\twindow.history.pushState('Access Token', null, '/');\n\n\t\t\treturn accessToken;\n\t\t} else {\n\t\t\tconst accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n\t\t\twindow.location = accessUrl;\n\t\t}\n\t},\n\n\tgetUserPlaylists() {\n\t\tconst headers = { Authorization: `Bearer ${accessToken}` };\n\t\treturn fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n\t\t\theaders: headers,\n\t\t})\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((jsonResponse) => {\n\t\t\tplaylistArray = jsonResponse.items.map((playlist) => playlist.name)\n\t\t\tconsole.log(jsonResponse)\n\t\t\t// array of objects\n\t\t\treturn playlistArray\n\t\t})\t\n\t},\n\t\n\tsearch(term) {\n\t\tif (term === \"\") {\n\t\t\treturn\n\t\t}\n\t\treturn fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((jsonResponse) => {\n\t\t\t\tif (!jsonResponse.tracks) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn jsonResponse.tracks.items.map((track) => ({\n\t\t\t\t\tid: track.id,\n\t\t\t\t\tname: track.name,\n\t\t\t\t\tartist: track.artists[0].name,\n\t\t\t\t\talbum: track.album.name,\n\t\t\t\t\turi: track.uri,\n\t\t\t\t}));\n\t\t\t});\n\t},\n\n\tsavePlaylist(name, trackUris) {\n\t\tconst headers = { Authorization: `Bearer ${accessToken}` };\n\t\t\t\treturn fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n\t\t\t\t\theaders: headers,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify({ name: name }),\n\t\t\t\t})\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\n\t\t\t\t\t.then((jsonResponse) => {\n\t\t\t\t\t\tconst playlistId = jsonResponse.id;\n\t\t\t\t\t\t// console.log('jsonResponse.id', jsonResponse)\n\t\t\t\t\t\treturn fetch(\n\t\t\t\t\t\t\t`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: headers,\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\tbody: JSON.stringify({ uris: trackUris }),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\t\t\n\t\t\t\t\t});\n\t\t\n\t},\n}\n\nexport default Spotify;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.jsx';\nimport SearchResults from '../SearchResults/SearchResults.jsx';\nimport PlayList from '../PlayList/PlayList.jsx';\nimport Spotify from '../../util/Spotify.jsx';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addTrack = this.addTrack.bind(this);\n\t\tthis.removeTrack = this.removeTrack.bind(this);\n\t\tthis.updatePlaylistName = this.updatePlaylistName.bind(this);\n\t\tthis.savePlaylist = this.savePlaylist.bind(this);\n\t\tthis.search = this.search.bind(this);\n\t\tthis.state = {\n\t\t\tsearchResults: [],\n\t\t\tplaylistName: 'playlistName',\n\t\t\tplaylistTracks: [],\n\t\t\tuserData: {},\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tSpotify.fetchUserStuff()\n\t\t.then((response) => {\n\t\t\tthis.setState({userData: response})\n\t\t})\n\t}\n\n\tsearch(term) {\n\t\tSpotify.search(term).then((searchResults) => {\n\t\t\tthis.setState({ searchResults: searchResults });\n\t\t});\n\t}\n\n\taddTrack(track) {\n\t\tlet tracks = this.state.playlistTracks;\n\t\tif (\n\t\t\tthis.state.playlistTracks.find((savedTrack) => savedTrack.id === track.id)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\ttracks.push(track);\n\t\tthis.setState({ PlaylistTracks: tracks });\n\t}\n\n\tremoveTrack(track) {\n\t\tlet tracks = this.state.playlistTracks;\n\t\ttracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\n\t\tthis.setState({ playlistTracks: tracks });\n\t}\n\n\tupdatePlaylistName(name) {\n\t\tthis.setState({ playlistName: name });\n\t}\n\n\tsavePlaylist() {\n\t\tconst trackUris = this.state.playlistTracks.map((track) => track.uri);\n\t\tif (trackUris.length <= 0) {\n\t\t\treturn\n\t\t} else {\n\t\t\tSpotify.savePlaylist(this.state.playlistName, trackUris)\n\t\t\t\n\t\t\t.then(() => {\n\t\t\tthis.setState({ searchResults: [] });\n\t\t});\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\tMy<span className=\"highlight\">jams</span>\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<SearchBar onSearch={this.search} />\n\t\t\t\t\t<div className=\"App-playlist\">\n\t\t\t\t\t\t<SearchResults\n\t\t\t\t\t\t\tonAdd={this.addTrack}\n\t\t\t\t\t\t\tsearchResults={this.state.searchResults}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PlayList\n\t\t\t\t\t\t\tplayListName={this.state.playlistName}\n\t\t\t\t\t\t\tplaylistTracks={this.state.playlistTracks}\n\t\t\t\t\t\t\tonRemove={this.removeTrack}\n\t\t\t\t\t\t\tonNameChange={this.updatePlaylistName}\n\t\t\t\t\t\t\tonSave={this.savePlaylist}\n\t\t\t\t\t\t\tuserData={this.state.userData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}